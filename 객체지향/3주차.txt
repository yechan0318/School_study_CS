객체지향 2주차

//자바의 기본구조
public class 클래스명{//클래스의 범위{}
 public static int 메소드명(메소드 지역변수){메소드의 범위{
 }
 public static void main(String args[]){//메인메소드
 실행의 시작은 메인에서 부터 시작한다 
 int i=20;
 s= 메소드 이름(지역변수 값 지역변수의 갯수를 맞춰주어야 한다);
//다른 메소드를 메인 메소드 안에서 사용하기 위해 호출해주고 지역변수의 값을 지정해준다.
 }
}클래스의 끝


//변수선언
변수 타입과 변수 이름 선언
메소드 내에서 선언된 변수는 지역 변수(지역 변수는 메소드가 끝나면 소멸된다.)

//메소드 호출과 리턴
public static int sum(int n, int m){
	return n + m; // n=20 m=10 30을 리턴한다
}
public static void main(String args[]){
 int i = 20; 변수의 값을 지정해준다
 s=sum(i, 10);// sum 클래스를 호출하고 지역변수에 값을 준다.
}

//식별자
클래스,변수,상수,메소드 등에 붙이는 이름
원칙
특수문자,공백,탭은 식별자로 사용할 수 없다(_,$는 예외)
유니코드 문자 사용 가능(영문을 추천)
자바언어의 키워드는 식별자로 사용불가
식별자의 첫 문자를 숫자로 사용 불가능
길이 제한 없음
자바에서의 식별자는 대문자와 소문자를 구별해서 인식한다
클래스는 첫 문자를 대문자로 시작 각 단어의 첫 번째 문자만 대문자
변수, 메소드는 첫 단어 이후 첫 번째 문자는 대문자로 시작
상수는 모든 문자를 대문자로 표시

//자바 데이터 타입
기본 8개
boolean(참,거짓),char(문자),byte,short,int,long,float,double (정수)
특징
기본 타입의 크기가 정해져 있음
문자열
String 클래스를 사용한다.(String 호출할 이름)
변수
프로그램 실행 중에 값을 임시 저장하기 위한 공간
변수 값은 프로그램 수행 중 변경될 수 있음
데이터 타입에서 정한 크기의 메모리 할당
변수선언-변수의 타입 다음에 이름을 적어 변수를 선언

//리터럴
프로그램에서 직접 표현한 값
정수,실수,문자,논리,문자열 리터럴 있음
정수 리터럴
0(0으로 시작 8진수),0x(0x로 시작하면 16진수),0b(0b로 시작하면 2진수)
정수 리터럴은 int형으로 컴파일, long형은 숫자뒤에 L,l로 선언
실수 리터럴
소수점 형태나 지수 형태로 표현한 실수]
숫자 뒤에 f나b로 수식
문자 리터럴
특수문자 리터럴을 백슬래시로시작
논리 리터럴
true,false boolean 타입 변수에 치환하거나 조건문에 이용
숫자 리터럴
숫자에 _를 사용해서 컴파일러에서 _를 인식하지 않는다.
var를 사용햇 자동으로 변수의 타입을 만들어 준다.(var을 사용할때는 초기값을 넣어주어야 한다.)
상수
상수선언시 final로 선언
final 데이터타입 상수이름 = 초기화;

//타입 변환
자동 타입 변환
작은 타입은 큰 타입으로 자동 변환
치환문이나 수식 내에서 타입이 일치하지 않을 때
강제 타입 변환 ()안에 변경할 타입을 넣어준다.
개발자가 필요하여 강제로 타입 변환을 지시

